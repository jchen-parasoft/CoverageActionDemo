# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Generate Jtest Report

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: self-hosted
    steps:
    - uses: actions/checkout@v4

    # Generates the jtest.data.json input file.
    - name: Create input for Jtest
      run: mvn clean test-compile
      
    - name: Run Parasoft Jtest
      uses: parasoft/run-jtest-action@2.0.0
      with:
        # Installation folder of Parasoft Jtest. If not specified, the cpptestcli executable must be added to PATH.
        installDir: D:\Software\ParasoftTools\jtest_2024.1
        # Test configuration to be used for code analysis.
        testConfig: builtin://Unit Tests
        # Output folder for reports from code analysis.
        reportDir: report/jtest/unit
        # Input scope for analysis.
        input: target/jtest/jtest.data.json
        additionalParams: -settings localsettings.properties
    
    # Uploads an archive that includes all report files (.xml, .html, .sarif).
    - name: Archive reports
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: unit test and coverage reports
        path: report/jtest/unit/*.*
